name: CI/CD Pipeline with Security Scanning

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install KubeSec
        run: |
          curl -sSL https://github.com/controlplaneio/kubesec/releases/download/v2.11.4/kubesec_linux_amd64.tar.gz | tar -xz
          chmod +x kubesec
          sudo mv kubesec /usr/local/bin/

      - name: Run KubeSec scan
        run: |
          for file in manifests/*.yaml; do
            echo "Scanning $file..."
            # Only scan deployment files with kubesec, ignore other resource types
            if grep -q "kind: Deployment" "$file"; then
              kubesec scan "$file"
            else
              echo "Skipping $file - not a Deployment resource"
            fi
          done

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Extract image names
        id: extract-images
        run: |
          IMAGES=$(grep -r "image:" manifests/ | awk '{print $2}' | sort | uniq)
          echo "images=$IMAGES" >> $GITHUB_OUTPUT
          echo "Found images: $IMAGES"

      - name: Scan images with Trivy
        run: |
          # Directly scan the nginx image used in our deployment
          echo "Scanning nginx:1.21.0..."
          trivy image --exit-code 0 --severity HIGH,CRITICAL nginx:1.21.0

  deploy:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Update kube config
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=./kubeconfig

      - name: Apply manifests
        run: |
          kubectl apply -f manifests/namespace.yaml
          kubectl apply -f manifests/
